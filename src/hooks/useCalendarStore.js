//------------------------------------------------------------------------9------------------------------------------------------------------------
import { useDispatch, useSelector } from "react-redux"
import { onAddNewEvent, onDeleteEvent, onSetActiveEvent, onUpdateEvent } from "../store/calendar/calendarSlice";

export const useCalendarStore = () => {
    const dispatch = useDispatch();
    const { events, activeEvent } = useSelector(state => state.calendar);
    //------------------------------------------------------------------------10------------------------------------------------------------------------
    const setActiveEvent = (calendarEvent) => {
        dispatch(onSetActiveEvent(calendarEvent));
    }
    //------------------------------------------------------------------------10------------------------------------------------------------------------
    //------------------------------------------------------------------------12------------------------------------------------------------------------
    const startSavingEvent = async (calendarEvent) => {
        // TODO: llegar al backend

        //Todo bien
        if (calendarEvent._id) {
            // Actualizado
            dispatch(onUpdateEvent({ ...calendarEvent }));
        } else {
            // Creando
            dispatch(onAddNewEvent({ ...calendarEvent, _id: new Date().getTime() }));
        }
    }
    //------------------------------------------------------------------------12------------------------------------------------------------------------
    //------------------------------------------------------------------------14------------------------------------------------------------------------
    const startDeleteEvent = () => {
        dispatch(onDeleteEvent());
    }
    //------------------------------------------------------------------------14------------------------------------------------------------------------

    return {
        //Propiedades
        activeEvent,
        events,
        //------------------------------------------------------------------------14------------------------------------------------------------------------
        hasEventSelected: !!activeEvent?._id,
        //------------------------------------------------------------------------14------------------------------------------------------------------------

        //MÃ©todos
        //------------------------------------------------------------------------10------------------------------------------------------------------------
        setActiveEvent,
        //------------------------------------------------------------------------10------------------------------------------------------------------------
        //------------------------------------------------------------------------12------------------------------------------------------------------------
        startSavingEvent,
        //------------------------------------------------------------------------12------------------------------------------------------------------------
        //------------------------------------------------------------------------14------------------------------------------------------------------------
        startDeleteEvent
        //------------------------------------------------------------------------14------------------------------------------------------------------------
    }
}
//------------------------------------------------------------------------9------------------------------------------------------------------------